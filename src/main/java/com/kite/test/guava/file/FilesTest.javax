package com.kite.test.guava.file;

import java.io.File;
import java.io.IOException;
import java.util.List;

import org.junit.Test;

import com.google.common.base.Charsets;
import com.google.common.hash.HashCode;
import com.google.common.hash.Hashing;
import com.google.common.io.Files;

/**
 * 
 * 类FilesTest.java的实现描述：文件操作类 
 * @author pengliang 2016年10月14日 下午4:49:30
 */
public class FilesTest {

	/**
	 * 测试复制文件
	 * @throws IOException 
	 */
	@Test
	public void testCopyFile() throws IOException {
		File original  = new File("C:/Users/Administrator/Desktop/main.jar");
		File copy = new File("C:/Users/Administrator/Desktop/main1.jar");
		Files.copy(original, copy);
	}
	
	/**
	 * 测试移动/重命名文件
	 * @throws IOException 
	 */
	@Test
	public void testMoveFile() throws IOException {
		File original  = new File("C:/Users/Administrator/Desktop/main1.jar");
		File to = new File("C:/Users/Administrator/Desktop/main2.jar");
		Files.move(original, to);
	}
	
	/**
	 * 测试将文件读取为字符串列表
	 * @throws IOException 
	 */
	@Test
	public void testReadFolder2ListStr() throws IOException {
		File file = new File("C:/Users/Administrator/Desktop/现有信息.txt");
		List<String> readLines = Files.readLines(file, Charsets.UTF_8);
		for(String line : readLines)
			System.out.println(line);
	}
	
	/**
	 * 测试为文件生成hash值,可以用于对文件重复上传处理
	 * @throws IOException 
	 */
	@Test
	public void testFileHash() throws IOException {
		File file = new File("C:/Users/Administrator/Desktop/现有信息.txt"); //8f16349dcba48713e5f8a45c5fb8f5c3
		HashCode hashCode = Files.hash(file, Hashing.md5());
		System.out.println(hashCode);
	}
	
	/**
	 * 测试写或追加文件
	 * @throws IOException 
	 */
	@Test
	public void testAppendOrWriteFile() throws IOException {
		File file = new File("C:/Users/Administrator/Desktop/quote1.txt");
		String hamletQuoteStart = "To be, or not to be";
		Files.write(hamletQuoteStart,file, Charsets.UTF_8);//写文件
		         
		String hamletQuoteEnd = ",that is the question";
		Files.append(hamletQuoteEnd,file,Charsets.UTF_8); //追加文件
		         
		String overwrite = "Overwriting the file";
		Files.write(overwrite, file, Charsets.UTF_8); //重写文件
	}
}
